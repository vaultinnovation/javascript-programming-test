{"version":3,"sources":["../index.js"],"names":["reverseString","string","position","indexOf","slice","split","reverse","sortAlphaInts","arr","forEach","item","index","Number","sort","a","b","arrDiff","arrOne","arrTwo","tmp","i","push","diffPoints","pointOne","pointTwo","R","dLat","degTorad","lat","dLon","lon","Math","sin","cos","c","atan2","sqrt","d","toFixed","deg","PI","timeDif","timeOne","timeTwo","dateOne","Date","dateTwo","miliDif","hourDif","hours","abs"],"mappings":"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","file":"index.js","sourcesContent":["function reverseString(string)\n{\n\n    //finds position of . and removes it\n    let position = string.indexOf('.');\n    string = string.slice(0,position);\n\n    //splits string and reverses it\n    string = string.split(' ').reverse();\n    return string;\n}\n\nfunction sortAlphaInts(arr)\n{\n    //takes all strings and turns them into numbers\n    arr.forEach((item, index) => {\n        arr[index] = Number(item);\n    });\n\n    //sorts them based on which is smaller\n    arr.sort((a,b) => {\n        return (a) - (b);\n    });\n\n    return arr;\n}\n\nfunction arrDiff(arrOne, arrTwo)\n{\n    let tmp = [];\n    arrOne = sortAlphaInts(arrOne);\n    arrTwo = sortAlphaInts(arrTwo);\n    arrOne.forEach(i => {\n        if(arrTwo.indexOf(i) === -1)\n        {\n            tmp.push(i);\n        }\n    });\n\n    return tmp;\n}\n\n\n/*\nimplements haversine formula\nhttps://en.wikipedia.org/wiki/Haversine_formula\n*/\nfunction diffPoints(pointOne, pointTwo)\n{\n    const R = 6371; // Radius of the earth in km\n    let dLat = degTorad(pointTwo.lat-pointOne.lat);\n    let dLon = degTorad(pointTwo.lon - pointOne.lon);\n    let a =\n        Math.sin(dLat/2) * Math.sin(dLat/2) +\n        Math.cos(degTorad(pointOne.lat)) * Math.cos(degTorad(pointTwo.lat)) *\n        Math.sin(dLon/2) * Math.sin(dLon/2)\n    ;\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    let d = R * c;\n    return (d / 1.609).toFixed(2) // Convert to Miles;\n}\n\nfunction degTorad(deg)\n{\n    return deg * (Math.PI/180)\n}\n\nfunction timeDif(timeOne, timeTwo)\n{\n    const dateOne = new Date(timeOne);\n    const dateTwo = new Date(timeTwo);\n\n    const miliDif = dateOne - dateTwo;\n\n    const hourDif = miliDif / (1000 * 60 * 60);\n    if(hourDif < 0)\n    {\n        const hours = Math.abs(hourDif);\n        return `${hours} hour${hours > 1 ? 's' : ''} ago`\n    }\n    else\n    {\n        const hours = Math.abs(hourDif);\n        return `${hours} hour${hours > 1 ? 's' : ''} in the future`\n    }\n    return hourDif;\n}\n\nexport {reverseString, sortAlphaInts, arrDiff, diffPoints ,timeDif};\n"]}